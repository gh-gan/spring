<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.web</groupId>
	<artifactId>SSM_dalgen</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
 
	<properties>
		<spring.version>4.3.8.RELEASE</spring.version>
		<c3p0.version>0.9.5.2</c3p0.version>
		<jstl.version>1.2</jstl.version>
		<servlet-api.version>3.1.0</servlet-api.version>
		<jackson.version>2.9.10.7</jackson.version>
		<mybatis.version>3.4.4</mybatis.version>
		<mybatis-spring.version>1.3.1</mybatis-spring.version>
		<mysql.version>5.1.42</mysql.version>
		<junit.version>4.12</junit.version>
		<log4j.version>2.6.2</log4j.version>
	</properties>
	
	<dependencies>
		<!-- Spring 核心 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring DAO层 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency> 
		<!-- Spring webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version> 
		</dependency>
		<!-- Spring 切面 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring 对扩展包支持 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- c3p0 -->
		<dependency>
		    <groupId>com.mchange</groupId>
		    <artifactId>c3p0</artifactId>
		    <version>${c3p0.version}</version>
		</dependency>
		
		<!-- Servlet -->
		<!-- <dependency>
			<groupId>jstl</groupId> 
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency> -->
		<!-- <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId> 
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency> -->
		
		<!-- Json  -->
		<!-- <dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		    <version>1.9.13</version>
		</dependency>  -->  
		<dependency>
	      <groupId>com.fasterxml.jackson.core</groupId> 
	      <artifactId>jackson-core</artifactId>
	      <version>${jackson.version}</version>
	    </dependency> 
	    <dependency>
	      <groupId>com.fasterxml.jackson.core</groupId>
	      <artifactId>jackson-databind</artifactId>
	      <version>${jackson.version}</version>
	    </dependency> 
		     
		<!-- Mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency> 
		
		<!-- MySql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version> 
		</dependency>

		<!-- log4j 2.x -->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>${log4j.version}</version>
	    </dependency>
	    <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>${log4j.version}</version>
	    </dependency>
	    <!-- 兼容 log4j 1.x -->
	    <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-1.2-api</artifactId>
		    <version>${log4j.version}</version>
	    </dependency>
	    
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration> 
					<source>1.8</source>
					<target>1.8</target> 
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- dalgen 插件 -->
			<plugin>
				<groupId>cn.dalgen.plugins</groupId>
				<artifactId>mybatis-maven-plugin</artifactId>
				<version>1.3.1</version>
				<!--
					templateDirectory 下载的相关模板(代码、初始SQL等)存放位置，如果生成后代码不符合预期可以与copyTemplate结合使用，将模板下载下来修改
					copyTemplate 是否下载模板到本地，注意：第一次copyTemplate = true ，模板下载后修改为false，不然每次被覆盖
					outputDirectory 代码生成根文件名位置，默认src
				-->
				<configuration>
					<templateDirectory>dalgen/templates</templateDirectory>
					<copyTemplate>false</copyTemplate>
					<!-- 代码生成时存放的项目根文件名，一般都是src  项目/根文件名/ -->
					<outputDirectory>out</outputDirectory>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>